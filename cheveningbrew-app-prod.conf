
 # Adjust size as needed
server {
    client_max_body_size 20M;
    listen 80;
    server_name cheveningbrew.com www.cheveningbrew.com;
    return 301 https://www.cheveningbrew.com$request_uri;

}

server {
    listen 443 ssl;
    server_name cheveningbrew.com;

    ssl_certificate /etc/letsencrypt/live/cheveningbrew.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cheveningbrew.com/privkey.pem;

    return 301 https://www.cheveningbrew.com$request_uri;

}

server {
    listen 443 ssl;
    server_name www.cheveningbrew.com;

    ssl_certificate /etc/letsencrypt/live/cheveningbrew.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cheveningbrew.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    root /usr/local/openresty/nginx/html/build;

    # Static file types
    types {
        text/html html;
        application/javascript js;
        text/css css;
    }

    # API endpoints
    location /upload {
        proxy_pass http://127.0.0.1:8000/upload;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        client_max_body_size 20M;

        # CORS headers
        add_header 'Access-Control-Allow-Origin' 'https://www.cheveningbrew.com' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' '*' always;
    }

    location /download {
        proxy_pass http://127.0.0.1:8000/download;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;

        # CORS headers
        add_header 'Access-Control-Allow-Origin' 'https://www.cheveningbrew.com' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' '*' always;
    }

    location /rate {
        proxy_pass http://127.0.0.1:8000/rate;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;

        # CORS headers
        add_header 'Access-Control-Allow-Origin' 'https://www.cheveningbrew.com' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' '*' always;
    }

    location /translate {
        proxy_pass http://127.0.0.1:8000/translate;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;

        # CORS headers
        add_header 'Access-Control-Allow-Origin' 'https://www.cheveningbrew.com' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' '*' always;
    }


        location /interview {
        proxy_pass http://127.0.0.1:3001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;

        # CORS headers
        add_header 'Access-Control-Allow-Origin' 'https://www.cheveningbrew.com' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' '*' always;
    }


    location / {
        try_files $uri $uri/ /index.html;


    # For the /_next path (static assets)
    location /_next/ {
        proxy_pass http://localhost:3000/_next/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location /api {
        proxy_pass http://localhost:3000;
        # Include the same proxy settings as /interview
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Token service
    location /token_service {
        proxy_pass http://localhost:5000/;
        # Include the same proxy settings as /interview
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
}
